name: CI|CD push-github-docker.yaml
permissions:
  contents: write
on:
  push:
    tags:
      - v*
  pull_request:
  # This creates an environment variable called `IMAGE_NAME ` with the value `ghtoken_product_demo`.
env:
  IMAGE_NAME: soft-home-work
#
jobs:
  # This pushes the image to GitHub Packages.
  push:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./web-ui
    permissions:
      packages: write
      contents: read
      #
    steps:
      - name: ËØªÂèñ‰ªìÂ∫ìÂÜÖÂÆπ üëì
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Node.js üíñ
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Dependencies üòÅ
        run: |
          npm i -g yarn
          yarn install

      - name: ÊûÑÂª∫ dist üî®
        env:
          NODE_OPTIONS: --max_old_space_size=8192
        run: yarn run build

      - name: Build image
        run: docker build . --file Dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
